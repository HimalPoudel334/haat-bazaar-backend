use actix_web::web;

use crate::{
    handlers::{
        admin_device, auth, base_type, cart, category, invoice, order, order_item, payment,
        product, shipment, user,
    },
    middlewares::auth_middleware::Auth,
};

pub fn app_routes(cfg: &mut web::ServiceConfig) {
    cfg.service(
        web::scope("/auth")
            .service(auth::login)
            .service(auth::refresh_token),
    )
    .service(
        web::scope("/users")
            .service(user::create)
            .service(user::get_user)
            .service(user::get_user_from_phone_number)
            .service(user::get_user_from_email)
            .service(user::edit),
    )
    .service(
        web::scope("/products")
            .service(product::get)
            .service(product::get_product)
            .service(product::get_product_images_list),
    )
    .service(
        web::scope("/categories")
            .service(category::get)
            .service(category::get_category),
    )
    .service(
        web::scope("/orders")
            .wrap(Auth::authenticated())
            .service(order::create)
            .service(order::edit)
            .service(order::get_order)
            .service(order::get_user_orders)
            .service(order::update_delivery_status),
    )
    .service(
        web::scope("/order-details")
            .wrap(Auth::authenticated())
            .service(order_item::get)
            .service(order_item::get_order_detail)
            .service(order_item::add_order_detail),
    )
    .service(
        web::scope("/carts")
            .wrap(Auth::authenticated())
            .service(cart::get)
            .service(cart::create)
            .service(cart::update_quantity),
    )
    .service(
        web::scope("/payments")
            .service(payment::esewa_payment_confirmation)
            .service(payment::khalti_payment_confirmation)
            .service(
                web::scope("")
                    .wrap(Auth::authenticated())
                    .service(payment::create)
                    .service(payment::khalti_payment_get_pidx)
                    .service(payment::get),
            ),
    )
    .service(
        web::scope("/invoices")
            .wrap(Auth::authenticated())
            .service(invoice::create)
            .service(invoice::get)
            .service(invoice::get_all),
    )
    .service(
        web::scope("/base-types")
            .wrap(Auth::require_roles(&["Admin", "Staff"]))
            .service(base_type::get_delivery_status)
            .service(base_type::get_order_status)
            .service(base_type::get_shipment_status)
            .service(base_type::get_payment_methods)
            .service(base_type::get_product_sku),
    )
    .service(
        web::scope("/admin")
            .wrap(Auth::require_roles(&["Admin"]))
            .service(
                web::scope("/categories")
                    .service(category::create)
                    .service(category::edit)
                    .service(category::delete),
            )
            .service(
                web::scope("/products")
                    .service(product::create)
                    .service(product::edit)
                    .service(product::upload_product_images)
                    .service(product::delete),
            )
            .service(
                web::scope("/users")
                    .service(user::get)
                    .service(user::edit)
                    .service(user::delete),
            )
            .service(web::scope("/shipments").service(shipment::get))
            .service(web::scope("/payments").service(payment::get_all))
            .service(web::scope("/device").service(admin_device::register_fcm_token))
            .service(
                web::scope("/orders")
                    .service(order::get_orders_count)
                    .service(order::update_order_status)
                    .service(order::update_delivery_status)
                    .service(order::get_orders),
            ),
    );
}
